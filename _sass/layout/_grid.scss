// Set the number of columns you want to use on your layout.
$grid-columns: 12 !default;
// Set the gutter between columns.
$gutter-width: 24px !default;
// Set a margin for the container sides.
$outer-margin: 24px !default;

// Create or remove breakpoints for your project
// FYI: you want to use the breakpoints value that is the MINIMUM size.
// xs is always generated
$grid-breakpoints:
	sm map-get($breakpoints, phone),
	md map-get($breakpoints, midbreak),
	lg map-get($breakpoints, tablet) !default;

$gutter-compensation: ($gutter-width * .5) * -1;
$half-gutter-width: $gutter-width * .5;

html, body {
	max-width: 100vw;
	overflow-y: auto;
	overflow-x: hidden;
	-webkit-overflow-scrolling: touch;
}

.wrapper {
	margin-left: auto!important;
	margin-right: auto!important;
	max-width: $site-width;
	padding-left: $outer-margin;
	padding-right: $outer-margin;
	width:100%;
	background-repeat: no-repeat;
	background-size: cover;

	.wrapper {
		padding-left: 0;
		padding-right: 0;
	}
}

@include media-query('midbreak', 'max') {
    .wrapper {
        padding-left: $space-24;
        padding-right: $space-24;

        &.mobile-unpadded {
            padding-left: 0;
            padding-right:0;
        }
    }
}

.row {
	display: flex;
	flex: 0 1 auto;
	width: auto;
    flex-wrap: wrap;
	margin: $gutter-compensation;
	flex-direction: row;

	&.scroll {
		flex-wrap: nowrap;
		overflow-x: auto;
		overflow-y: hidden;
		-webkit-overflow-scrolling: touch;
		padding-bottom: $space-24;
		margin-bottom: -$space-24;

		@include media-query('midbreak', 'min') {
			&.no-scroll-desktop {
				flex-wrap: wrap;
				padding-bottom: 0;
				margin-bottom: 0;
				overflow: visible;
			}
		}

		
		@include media-query('midbreak', 'max') {
			margin: #{$gutter-compensation} #{-$space-24};
			padding-left: $space-12;
			padding-right: $space-12;
			padding-bottom: $space-24;
			margin-bottom: -$space-24;
			
			&:after {
				width: 24px;
				content: "";
				flex: 0 0 auto;
				display: block;
			}
		}
	}

	&.reverse {
		flex-direction: row-reverse;
	}
	
	@include media-query('midbreak', 'max') {
		margin: #{$gutter-compensation};
		
		&.reverse-col-mobile {
			flex-direction: column-reverse;
		}
	}
}

.col.reverse {
	flex-direction: column-reverse;
}

.right-auto {
	margin-right: auto;
}

@mixin sass-col-common {
	box-sizing: border-box;
	flex-grow: 0;
	flex-shrink: 0;
	padding: $half-gutter-width;
}

$name: xs;
.col-#{$name} {
	@include sass-col-common;
	flex-basis: auto;
}

@for $i from 1 through $grid-columns {
	.col-#{$name}-#{$i} {
		@include sass-col-common;
		flex-basis: 100% / $grid-columns * $i;
		max-width: 100% / $grid-columns * $i;
	}
}

@for $i from 0 through $grid-columns {
	.col-#{$name}-offset-#{$i} {
			@include sass-col-common;
			@if $i == 0 {
			margin-left: 0;
		} @else {
			margin-left: 100% / $grid-columns * $i;
		}
	}
}
.col-#{$name} {
	flex-grow: 1;
	flex-basis: 0;
	max-width: 100%;
}
.start-#{$name} {
	justify-content: flex-start;
	text-align: left;
}

.center-#{$name} {
	justify-content: center;
	text-align: center;
}

.end-#{$name} {
	justify-content: flex-end;
	text-align: right;
}

.top-#{$name} {
	align-items: flex-start;
}

.middle-#{$name} {
	align-items: center;
}

.bottom-#{$name} {
	align-items: flex-end;
}

.around-#{$name} {
	justify-content: space-around;
}

.between-#{$name} {
	justify-content: space-between;
}

.first-#{$name} {
	order: -1;
}

.last-#{$name} {
	order: 1;
}


@each $breakpoint in $grid-breakpoints {
	$name: nth($breakpoint, 1);
	$size: nth($breakpoint, 2);

	@media only screen and (min-width: $size) {
		.col-#{$name} {
			@include sass-col-common;
			flex-basis: auto;
		}
		@for $i from 1 through $grid-columns {
			.col-#{$name}-#{$i} {
				@include sass-col-common;
				flex-basis: 100% / $grid-columns * $i;
				max-width: 100% / $grid-columns * $i;
			}
		}
		@for $i from 0 through $grid-columns {
			.col-#{$name}-offset-#{$i} {
				@include sass-col-common;
				@if $i == 0 {
					margin-left: 0;
				} @else {
					margin-left: 100% / $grid-columns * $i;
				}
			}
		}
		.col-#{$name} {
			flex-grow: 1;
			flex-basis: 0;
			max-width: 100%;
		}
		.start-#{$name} {
			justify-content: flex-start;
			text-align: left;
		}

		.center-#{$name} {
			justify-content: center;
			text-align: center;
		}

		.end-#{$name} {
			justify-content: flex-end;
			text-align: right;
		}

		.top-#{$name} {
			align-items: flex-start;
		}

		.middle-#{$name} {
			align-items: center;
		}

		.bottom-#{$name} {
			align-items: flex-end;
		}

		.around-#{$name} {
			justify-content: space-around;
		}

		.between-#{$name} {
			justify-content: space-between;
		}

		.first-#{$name} {
			order: -1;
		}

		.last-#{$name} {
			order: 1;
		}
	}
}
